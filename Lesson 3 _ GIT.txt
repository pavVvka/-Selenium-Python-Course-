

===================   про Git  ======================
https://stepik.org/lesson/187065/step/2?unit=161976


>  Время создать свой первый репозиторий — это место, где будет храниться ваш проект.

    В правом верхнем углу рядом с аватаркой нажмите + и выберите "New repository".
    Выберите имя для вашего репозитория. Лучше всего выбирать что-то осмысленное — чтобы через год легко было догадаться, что это и о чем. Например, "stepik — auto tests course".
    Сформулируйте короткое описание для проекта. Здесь можно написать о том, что это домашние задания к курсу.
    Выбираем Public (публичный) репозиторий: это означает, что любой сможет его найти и открыть.
    Ставим галочку Initialize this repository with README.
    Нажимаем кнопку Create repository.



>  Клонируем репозиторий
 понадобится клиент Git — это программа, которая отслеживает и записывает изменения в файлах.


Для начала нужно скопировать к себе только что созданный репозиторий. Для этого применяется термин "склонировать".

На страничке своего проекта нажмите на зеленую кнопку Clone or download и скопируйте адрес из строки:


Чтобы склонировать к себе введите в консоли:

git clone *адрес вашего репозитория*  

Чтобы перейти в каталог репозитория, введите:

cd *имя репозитория *


----------------------------

Введите в консоль ключевое слово git, чтобы увидеть популярные команды

Подсказку по какой-то конкретной команде, то можете ввести git help <команда> или git <команда> --help.

git status
команда позволяет отслеживать, какие изменения в репозитории вы сделали, что добавили в отслеживаемые файлы, что попало в коммит, что нет и так далее. 

git add
git log



>  Первый коммит

Для первого изменения будем использовать уже существующий файл: README.md.


Чтобы Git отслеживал изменения в ваших файлах, нужно их "добавить". Это специальная команда, которая говорит Git, 
на какие файлы нужно смотреть и записывать их изменения, а все остальные файлы будут игнорироваться.

Для того чтобы добавить файлы под бдительный взор Git, нужно выполнить команду:

git add README.md


Для того чтобы зафиксировать и сохранить свою работу нужно выполнить "коммит".

git commit -m "тут ваше сообщение о коммите"  




>  Добавление изменений на сервер (push)


Необходимо наши локальные коммиты положить в удаленный репозиторий. 
Для этого есть специальная команда git push <репозиторий><название ветки>.

основная ветка, на которой вы находитесь по умолчанию — это master. 

Мы будем пушить в удаленный репозиторий origin — оригинальный репозиторий, 
откуда мы скопировали к себе на компьютер локальную версию.


Выполним команду:

git push origin master

Или git push origin main для новых репозиториев.

Если вы все сделали правильно, то гитхаб подтянет описание проекта из файла и красиво отобразит на страничке:

Можно, например, кликнуть на сообщение коммита и посмотреть, какие были изменения:
Зеленые строки — это те, которые добавились, а красные — те, которые были удалены.

Вот и все, вы молодец!


>   Задача:

добавить файлы с решениями задач из предыдущего модуля в свой репозиторий на гитхабе.

Для этого вам нужно проделать следующее:

    Выберите один или несколько файлов с решениями задач из предыдущего модуля.
    Скопируйте их в папку с вашим локальным репозиторием.
    Добавьте файлы для отслеживания гитом.
    Выполните коммит (не забудьте добавить осмысленное сообщение!).
    Отправьте изменения на удаленный репозиторий.
    В браузере убедитесь, что файлы добавлены в репозиторий.



Полезные ссылки:

https://learngitbranching.js.org/ — отличный интерактивный туториал

https://git-scm.com/book/ru/v2/ — лучшая книга вообще 

https://hyperskill.org/learn/topic/257/﻿

https://stepik.org/course/4138/﻿

https://stepik.org/course/3145/

http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/ru/index.html

https://habr.com/company/intel/blog/344962/

https://githowto.com/ru








